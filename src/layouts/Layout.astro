---
export interface Props {
  title: string
  use100vh?: boolean
  textDir: string
  repoUrl: string
  customFont?: string | null
  customFontFamily?: string | null
}
// imports
import { pwaInfo } from "virtual:pwa-info"
import "../styles/global.css"
import { Nav } from "@components"
import { getPreferredLangFromHeader } from "@lib/utils"

// data
const { title, use100vh, textDir, repoUrl, customFont, customFontFamily } =
  Astro.props

const preferredLocale = getPreferredLangFromHeader(Astro.request)
let initialDictModule = await import(`../translations/${preferredLocale}.js`)
const initialDict = {
  [preferredLocale]: initialDictModule.default
}
---

<!DOCTYPE html>
<html lang={preferredLocale} dir={textDir}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image" href="/favicon-32x32.png" />
    <link
      rel="preload"
      as="font"
      type="font/woff2"
      href="/fonts/atkinson/atkinson-hyperlegible-v10-latin-ext_latin-regular.woff2"
      crossorigin
    />
    <link
      rel="preload"
      as="font"
      type="font/woff2"
      href="/fonts/atkinson/atkinson-hyperlegible-v10-latin-ext_latin-700.woff2"
      crossorigin
    />
    {
      customFont && customFontFamily && (
        <link
          rel="preload"
          as="font"
          type="font/woff2"
          href={customFont}
          crossorigin
        />
      )
    }
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content="A site to read rendered USFM" />
    <script src="/src/pwa.ts"></script>
    {
      // used to work with just teh virtual, but it says doesn't during an ssr build, so making sure to put manifest link here.  As long as the build process spits out manifest.webmanifest, this should be fine.
      import.meta.env.PROD && (
        <Fragment
          set:html={'<link rel="manifest" href="/manifest.webmanifest">'}
        />
      )
    }
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
  </head>
  <body
    style={customFont && customFontFamily
      ? { "font-family": customFontFamily }
      : null}
    class={customFont && customFontFamily && "usingCustomFont"}
  >
    <div class={use100vh ? "print:block print:pb-20" : ""} id="pageWrapper">
      <Nav
        preferredLocale={preferredLocale}
        initialDict={initialDict}
        repoUrl={repoUrl}
      />
      <slot />
      <!-- <ReloadPrompt /> -->
    </div>
  </body>
</html>
