---
export interface Props {
  title: string
  use100vh?: boolean
  textDir: string
}
// imports
import { pwaInfo } from "virtual:pwa-info"
import "../styles/global.css"
import { Nav } from "@components"
import { getPreferredLangFromHeader } from "@lib/utils"

// data
const { title, use100vh, textDir } = Astro.props

const preferredLocale = getPreferredLangFromHeader(Astro.request)
let initialDictModule = await import(`../translations/${preferredLocale}.json`)
const initialDict = {
  [preferredLocale]: initialDictModule.default
}
const stringPwa = JSON.stringify(pwaInfo)
---

<!DOCTYPE html>
<html lang={preferredLocale} dir={textDir}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image" href="/favicon-32x32.png" />
    <link
      rel="preload"
      as="font"
      type="font/woff2"
      href="/fonts/atkinson/atkinson-hyperlegible-v10-latin-ext_latin-regular.woff2"
      crossorigin
    />
    <link
      rel="preload"
      as="font"
      type="font/woff2"
      href="/fonts/atkinson/atkinson-hyperlegible-v10-latin-ext_latin-700.woff2"
      crossorigin
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content="A site to read rendered USFM" />
    <script src="/src/pwa.ts"></script>
    {console.log({ pwaInfo })}
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
  </head>
  <body>
    <div
      class={use100vh ? "print:block print:pb-20" : ""}
      id="pageWrapper"
      data-pwa={stringPwa}
    >
      <Nav preferredLocale={preferredLocale} initialDict={initialDict} />
      <slot />
      <!-- <ReloadPrompt /> -->
    </div>
  </body>
</html>
